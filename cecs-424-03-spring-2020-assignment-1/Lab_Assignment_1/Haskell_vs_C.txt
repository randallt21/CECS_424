The implementation for both algorithms is tiny in Haskell but requires a few separate functions in C. When I was coding in C, it felt like I had to direct each bit of data and ensure that I didn't lose any of it. You handle all the iterations and repositioning of elements. In Haskell, it feels more intuitive, like it wants to assist you with it's built in functions and provide you will simple implementation schemes that are very powerful. It required me to think differently, while implementing the same algorithm, but it was definitely easier visualizing the implementation of the algorithm in Haskell giving the concise statements and uncluttered syntax.